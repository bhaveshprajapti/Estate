# Generated by Django 5.2.6 on 2025-09-06 16:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('society_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('USER_MANAGEMENT', 'User Management'), ('BILLING', 'Billing & Payments'), ('COMMUNITY', 'Community Features'), ('SECURITY', 'Security & Visitors'), ('MAINTENANCE', 'Maintenance & Complaints'), ('SOCIETY_SETTINGS', 'Society Settings'), ('REPORTS', 'Reports & Analytics')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='approval_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='is_approved',
            field=models.BooleanField(default=True, help_text='Whether user is approved by admin'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login_ip',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='BulkUserOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_type', models.CharField(choices=[('IMPORT', 'Import Users'), ('EXPORT', 'Export Users'), ('BULK_UPDATE', 'Bulk Update'), ('BULK_DELETE', 'Bulk Delete'), ('ROLE_CHANGE', 'Bulk Role Change')], max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('total_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('error_log', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_operations', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_operations', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='ChairmanInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('invitation_token', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chairman_invitations', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='SocietySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_maintenance_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maintenance_due_day', models.IntegerField(default=5, help_text='Day of month when maintenance is due')),
                ('late_fee_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('allow_marketplace', models.BooleanField(default=True)),
                ('allow_job_postings', models.BooleanField(default=True)),
                ('auto_approve_bookings', models.BooleanField(default=False)),
                ('visitor_approval_required', models.BooleanField(default=True)),
                ('max_visitor_duration_hours', models.IntegerField(default=24)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('working_hours_start', models.TimeField(default='09:00')),
                ('working_hours_end', models.TimeField(default='18:00')),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='StaffCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_categories', to='society_management.society')),
            ],
            options={
                'verbose_name_plural': 'Staff Categories',
                'unique_together': {('name', 'society')},
            },
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_id', models.CharField(max_length=50, unique=True)),
                ('join_date', models.DateField()),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shift_start_time', models.TimeField()),
                ('shift_end_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('emergency_contact', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to='society_management.staffcategory')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRoleTransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_role', models.CharField(choices=[('ADMIN', 'Admin'), ('SUB_ADMIN', 'Sub Admin'), ('MEMBER', 'Member'), ('STAFF', 'Staff')], max_length=20)),
                ('to_role', models.CharField(choices=[('ADMIN', 'Admin'), ('SUB_ADMIN', 'Sub Admin'), ('MEMBER', 'Member'), ('STAFF', 'Staff')], max_length=20)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transitions', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_transitions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_transitions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminSociety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary society for this admin')),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_societies', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='society_management.society')),
            ],
            options={
                'unique_together': {('admin', 'society')},
            },
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flat_type', models.CharField(help_text='e.g., 1BHK, 2BHK, 3BHK', max_length=50)),
                ('maintenance_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('parking_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('amenity_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_structures', to='society_management.society')),
            ],
            options={
                'unique_together': {('society', 'flat_type')},
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('SUB_ADMIN', 'Sub Admin'), ('MEMBER', 'Member'), ('STAFF', 'Staff')], max_length=20)),
                ('can_create', models.BooleanField(default=False)),
                ('can_read', models.BooleanField(default=True)),
                ('can_update', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='society_management.permission')),
                ('society', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='society_management.society')),
            ],
            options={
                'unique_together': {('role', 'permission', 'society')},
            },
        ),
        migrations.CreateModel(
            name='DutySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('task_description', models.TextField()),
                ('location', models.CharField(help_text='Specific location within society', max_length=255)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('MISSED', 'Missed'), ('PARTIAL', 'Partially Completed')], default='SCHEDULED', max_length=20)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_duties', to=settings.AUTH_USER_MODEL)),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duty_schedules', to='society_management.staffmember')),
            ],
            options={
                'unique_together': {('staff_member', 'date', 'start_time')},
            },
        ),
    ]
