# Generated by Django 5.2.6 on 2025-09-07 12:14

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('society_management', '0004_subadmininvitation'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='aadhaar_number',
            field=models.CharField(blank=True, max_length=12, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='emergency_contact_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='emergency_contact_phone',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='occupation',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='ownership_type',
            field=models.CharField(blank=True, choices=[('OWNER', 'Owner'), ('TENANT', 'Tenant')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='pan_number',
            field=models.CharField(blank=True, max_length=10, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='user',
            name='permanent_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='BillType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Maintenance, Water, Electricity', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_period', models.CharField(blank=True, help_text='monthly, quarterly, yearly', max_length=20, null=True)),
                ('is_splitable', models.BooleanField(default=False)),
                ('default_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bill_types', to='society_management.society')),
            ],
            options={
                'unique_together': {('society', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., "Block A", "Tower 1"', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('total_floors', models.IntegerField()),
                ('flats_per_floor', models.IntegerField()),
                ('amenities', models.TextField(blank=True, help_text='Building-specific amenities')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='society_management.society')),
            ],
            options={
                'unique_together': {('society', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DirectoryEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('show_phone', models.BooleanField(default=True)),
                ('show_email', models.BooleanField(default=True)),
                ('show_address', models.BooleanField(default=False)),
                ('interests', models.TextField(blank=True)),
                ('skills', models.TextField(blank=True)),
                ('bio', models.TextField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='directory_entry', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EnhancedBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_number', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_details', models.JSONField(default=dict, help_text='Bank account info, UPI ID, etc.')),
                ('due_date', models.DateField()),
                ('late_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('attachments', models.JSONField(default=list, help_text='List of attachment URLs')),
                ('is_recurring', models.BooleanField(default=False)),
                ('next_due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_mode', models.CharField(blank=True, choices=[('ONLINE', 'Online'), ('CASH', 'Cash'), ('CHEQUE', 'Cheque'), ('BANK_TRANSFER', 'Bank Transfer'), ('UPI', 'UPI')], max_length=20, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('bill_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='society_management.billtype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_bills', to=settings.AUTH_USER_MODEL)),
                ('paid_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paid_bills', to=settings.AUTH_USER_MODEL)),
                ('parent_bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recurring_bills', to='society_management.enhancedbill')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enhanced_bills', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='EnhancedFlat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_number', models.IntegerField()),
                ('flat_number', models.CharField(max_length=20)),
                ('flat_type', models.CharField(help_text='e.g., "1BHK", "2BHK", "3BHK"', max_length=50)),
                ('carpet_area', models.FloatField(help_text='Area in sq ft')),
                ('balcony_area', models.FloatField(default=0, help_text='Balcony area in sq ft')),
                ('parking_slots', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('monthly_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('possession_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='society_management.building')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enhanced_flats', to='society_management.society')),
            ],
            options={
                'unique_together': {('building', 'floor_number', 'flat_number')},
            },
        ),
        migrations.AddField(
            model_name='flat',
            name='enhanced_flat',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legacy_flat', to='society_management.enhancedflat'),
        ),
        migrations.CreateModel(
            name='HelpdeskDesignation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='e.g., Electrician, Plumber, Manager', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(help_text='e.g., Maintenance, Emergency, Administrative', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpdesk_designations', to='society_management.society')),
            ],
            options={
                'unique_together': {('society', 'title')},
            },
        ),
        migrations.CreateModel(
            name='HelpdeskContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('primary_phone', models.CharField(max_length=20)),
                ('secondary_phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('photo', models.CharField(blank=True, help_text='URL/path to photo', max_length=255, null=True)),
                ('availability', models.CharField(blank=True, help_text='Available hours', max_length=100)),
                ('service_charges', models.TextField(blank=True)),
                ('rating', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_helpdesk_contacts', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpdesk_contacts', to='society_management.society')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='society_management.helpdeskdesignation')),
            ],
        ),
        migrations.CreateModel(
            name='MemberInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('ownership_type', models.CharField(choices=[('OWNER', 'Owner'), ('TENANT', 'Tenant')], max_length=20)),
                ('invitation_token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_invitations', to='society_management.building')),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_invitations', to='society_management.enhancedflat')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_invitations_sent', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_invitations', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='MemberRegistrationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('ownership_type', models.CharField(choices=[('OWNER', 'Owner'), ('TENANT', 'Tenant')], max_length=20)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=20)),
                ('permanent_address', models.TextField()),
                ('id_proof_number', models.CharField(help_text='Aadhaar/PAN/Passport number', max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_comments', models.TextField(blank=True)),
                ('documents_uploaded', models.JSONField(default=list, help_text='List of document URLs')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_requests', to='society_management.building')),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_requests', to='society_management.enhancedflat')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_requests', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='SocietyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('established_year', models.IntegerField(blank=True, null=True)),
                ('total_units', models.IntegerField(default=0)),
                ('society_logo', models.CharField(blank=True, help_text='URL/path to logo', max_length=255, null=True)),
                ('society_type', models.CharField(default='Residential', max_length=50)),
                ('amenities_list', models.JSONField(default=list, help_text='List of society amenities')),
                ('society_rules', models.TextField(blank=True)),
                ('visitor_policy', models.TextField(blank=True)),
                ('pet_policy', models.TextField(blank=True)),
                ('parking_rules', models.TextField(blank=True)),
                ('noise_policy', models.TextField(blank=True)),
                ('office_timings', models.CharField(blank=True, max_length=100)),
                ('emergency_contact', models.CharField(blank=True, max_length=20)),
                ('website', models.URLField(blank=True)),
                ('social_media_links', models.JSONField(default=dict, help_text='Social media links')),
                ('registration_authority', models.CharField(blank=True, max_length=100)),
                ('gst_number', models.CharField(blank=True, max_length=15)),
                ('pan_number', models.CharField(blank=True, max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='StaffInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('staff_id', models.CharField(max_length=50)),
                ('designation', models.CharField(max_length=100)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shift_start_time', models.TimeField()),
                ('shift_end_time', models.TimeField()),
                ('invitation_token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_invitations', to='society_management.staffcategory')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_invitations_sent', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_invitations', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='VisitorPass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_number', models.CharField(max_length=20, unique=True)),
                ('qr_code', models.CharField(blank=True, help_text='QR code data', max_length=255, null=True)),
                ('visitor_name', models.CharField(max_length=255)),
                ('visitor_phone', models.CharField(max_length=20)),
                ('visitor_id_proof', models.CharField(blank=True, max_length=100)),
                ('purpose_of_visit', models.CharField(max_length=255)),
                ('expected_entry_time', models.DateTimeField()),
                ('expected_exit_time', models.DateTimeField(blank=True, null=True)),
                ('referenced_by', models.CharField(help_text='Name of person who referred', max_length=255)),
                ('reference_phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('USED', 'Used'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actual_entry_time', models.DateTimeField(blank=True, null=True)),
                ('actual_exit_time', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_visitor_passes', to=settings.AUTH_USER_MODEL)),
                ('flat_to_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitor_passes', to='society_management.enhancedflat')),
                ('gate_entry_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_in_visitors', to=settings.AUTH_USER_MODEL)),
                ('gate_exit_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_out_visitors', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitor_passes', to='society_management.society')),
            ],
        ),
        migrations.CreateModel(
            name='GateUpdateLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(choices=[('VISITOR_ENTRY', 'Visitor Entry'), ('VISITOR_EXIT', 'Visitor Exit'), ('VEHICLE_ENTRY', 'Vehicle Entry'), ('VEHICLE_EXIT', 'Vehicle Exit'), ('STAFF_ENTRY', 'Staff Entry'), ('STAFF_EXIT', 'Staff Exit'), ('DENIED_ENTRY', 'Denied Entry'), ('EMERGENCY', 'Emergency'), ('MAINTENANCE', 'Maintenance')], max_length=20)),
                ('person_name', models.CharField(blank=True, max_length=255)),
                ('person_phone', models.CharField(blank=True, max_length=20)),
                ('id_proof_number', models.CharField(blank=True, max_length=100)),
                ('vehicle_number', models.CharField(blank=True, max_length=20)),
                ('vehicle_type', models.CharField(blank=True, max_length=50)),
                ('flat_number', models.CharField(blank=True, max_length=20)),
                ('purpose', models.CharField(blank=True, max_length=255)),
                ('gate_number', models.CharField(default='1', max_length=10)),
                ('entry_method', models.CharField(blank=True, help_text='Manual, QR Scan, etc.', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('approval_required', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_gate_logs', to=settings.AUTH_USER_MODEL)),
                ('logged_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gate_logs', to=settings.AUTH_USER_MODEL)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gate_logs', to='society_management.society')),
                ('visitor_pass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gate_logs', to='society_management.visitorpass')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BillDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('payment_mode', models.CharField(blank=True, choices=[('ONLINE', 'Online'), ('CASH', 'Cash'), ('CHEQUE', 'Cheque'), ('BANK_TRANSFER', 'Bank Transfer'), ('UPI', 'UPI')], max_length=20, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='society_management.enhancedbill')),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bill_distributions', to='society_management.enhancedflat')),
            ],
            options={
                'unique_together': {('bill', 'flat')},
            },
        ),
    ]
