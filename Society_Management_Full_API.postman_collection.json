{
  "info": {
    "name": "üè¢ Society Management - FULL API Collection",
    "description": "COMPLETE API Collection with ALL CRUD Operations for EVERY Implemented Feature - Member Management, Vehicle Management, Amenity Booking, Complaint System, Marketplace, Billing, Security, Helpdesk, and Analytics",
    "version": "6.0.0 - FULL EDITION",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication System",
      "item": [
        {
          "name": "üëë Super Admin Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('super_admin_token', r.tokens.access);",
                  "    pm.environment.set('admin_access_token', r.tokens.access);",
                  "    console.log('üöÄ Super Admin Login Success');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{super_admin_phone}}\",\n    \"password\": \"{{super_admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-password/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-password",
                ""
              ]
            }
          }
        },
        {
          "name": "üîë ADMIN Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('access_token', r.tokens.access);",
                  "    pm.environment.set('admin_access_token', r.tokens.access);",
                  "    pm.environment.set('admin_user_id', r.user.id);",
                  "    console.log('‚úÖ ADMIN Login');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{admin_phone}}\",\n    \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-password/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-password",
                ""
              ]
            }
          }
        },
        {
          "name": "üèõÔ∏è SUB_ADMIN Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('subadmin_access_token', r.tokens.access);",
                  "    pm.environment.set('access_token', r.tokens.access);",
                  "    pm.environment.set('subadmin_user_id', r.user.id);",
                  "    console.log('‚úÖ SUB_ADMIN Login');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{subadmin_phone}}\",\n    \"password\": \"{{subadmin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-password/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-password",
                ""
              ]
            }
          }
        },
        {
          "name": "üë• MEMBER Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('member_access_token', r.tokens.access);",
                  "    pm.environment.set('access_token', r.tokens.access);",
                  "    pm.environment.set('user_id', r.user.id);",
                  "    console.log('‚úÖ MEMBER Login');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{member_phone}}\",\n    \"password\": \"{{member_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-password/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-password",
                ""
              ]
            }
          }
        },
        {
          "name": "üë∑ STAFF Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('staff_access_token', r.tokens.access);",
                  "    pm.environment.set('access_token', r.tokens.access);",
                  "    console.log('‚úÖ STAFF Login');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{staff_phone}}\",\n    \"password\": \"{{staff_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-password/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-password",
                ""
              ]
            }
          }
        },
        {
          "name": "üìù Member Registration (Pending)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('pending_member_phone', r.user.phone_number);",
                  "    pm.environment.set('member_request_id', r.id);",
                  "    console.log('Member needs approval:', r.user.phone_number);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{member_phone}}\",\n    \"email\": \"{{member_email}}\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"Member\",\n    \"password\": \"{{member_password}}\",\n    \"password_confirm\": \"{{member_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "register",
                ""
              ]
            }
          }
        },
        {
          "name": "‚ùå Test Blocked Login (Shows Chairman Contact)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 400) {",
                  "    const error = pm.response.json();",
                  "    console.log('‚úÖ Login blocked - Chairman contact:', error.non_field_errors[0]);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{pending_member_phone}}\",\n    \"password\": \"{{member_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-password/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-password",
                ""
              ]
            }
          }
        },
        {
          "name": "üì± Send OTP for Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{member_phone}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-otp-step1/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-otp-step1",
                ""
              ]
            }
          }
        },
        {
          "name": "üîì Verify OTP and Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{member_phone}}\",\n    \"otp_code\": \"{{login_otp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-otp-step2/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-otp-step2",
                ""
              ]
            }
          }
        },
        {
          "name": "üîÑ Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/token/refresh/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "token",
                "refresh",
                ""
              ]
            }
          }
        },
        {
          "name": "üë§ Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "profile",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update User Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"Name\",\n    \"occupation\": \"Software Engineer\",\n    \"emergency_contact_name\": \"Emergency Contact\",\n    \"emergency_contact_phone\": \"9876543210\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/profile/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "profile",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üè¢ Society Management",
      "item": [
        {
          "name": "üèóÔ∏è Create Society",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('society_id', r.id);",
                  "    console.log('Society created:', r.name);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{society_name}}\",\n    \"address\": \"{{society_address}}\",\n    \"city\": \"{{society_city}}\",\n    \"state\": \"{{society_state}}\",\n    \"pincode\": \"{{society_pincode}}\",\n    \"registration_number\": \"{{society_registration}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/societies/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "societies",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Societies",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/societies/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "societies",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Society Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/societies/{{society_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "societies",
                "{{society_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Society",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Society Name\",\n    \"address\": \"Updated Address\",\n    \"city\": \"Mumbai\",\n    \"state\": \"Maharashtra\",\n    \"pincode\": \"400001\",\n    \"registration_number\": \"TS2025001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/societies/{{society_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "societies",
                "{{society_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Search Societies (Public)",
          "request": {
            "method": "GET",
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{base_url}}/societies/search/?search=Test",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "societies",
                "search",
                ""
              ],
              "query": [
                {
                  "key": "search",
                  "value": "Test"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üé≠ SUB_ADMIN Invitation Flow",
      "item": [
        {
          "name": "üìß Create SUB_ADMIN Invitation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('invitation_id', r.invitation.id);",
                  "    pm.environment.set('invitation_otp', r.otp_info.otp_code);",
                  "    pm.environment.set('subadmin_phone', r.invitation.phone_number);",
                  "    console.log('Invitation OTP:', r.otp_info.otp_code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"phone_number\": \"{{subadmin_phone}}\",\n    \"email\": \"{{subadmin_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/create-subadmin-invitation/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "admin",
                "create-subadmin-invitation",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úÖ Verify Invitation OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{subadmin_phone}}\",\n    \"otp_code\": \"{{invitation_otp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/invitation/verify-otp/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "invitation",
                "verify-otp",
                ""
              ]
            }
          }
        },
        {
          "name": "üéØ Complete SUB_ADMIN Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('subadmin_access_token', r.tokens.access);",
                  "    console.log('SUB_ADMIN created:', r.user.first_name);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"invitation_id\": {{invitation_id}},\n    \"first_name\": \"Society\",\n    \"last_name\": \"Chairman\",\n    \"password\": \"{{subadmin_password}}\",\n    \"password_confirm\": \"{{subadmin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/invitation/complete-registration/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "invitation",
                "complete-registration",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Member Management",
      "item": [
        {
          "name": "‚ûï SUB_ADMIN Direct Add Member",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('direct_member_phone', '9400000001');",
                  "    pm.environment.set('temp_password', r.temp_password);",
                  "    console.log('Direct member added, temp password:', r.temp_password);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"9400000001\",\n    \"email\": \"{{direct_member_email}}\",\n    \"first_name\": \"Direct\",\n    \"last_name\": \"Member\",\n    \"password\": \"{{member_password}}\",\n    \"password_confirm\": \"{{member_password}}\",\n    \"ownership_type\": \"TENANT\",\n    \"date_of_birth\": \"1985-05-15\",\n    \"occupation\": \"Teacher\",\n    \"emergency_contact_name\": \"Emergency Contact\",\n    \"emergency_contact_phone\": \"9876543210\",\n    \"permanent_address\": \"123 Address\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/members/direct-add/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "members",
                "direct-add",
                ""
              ]
            }
          }
        },
        {
          "name": "üîë Test Direct Member Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ Direct member can login immediately');",
                  "} else {",
                  "    console.log('‚ùå Direct member login failed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{direct_member_phone}}\",\n    \"password\": \"{{temp_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login-password/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login-password",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Members",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/members/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "members",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Member Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/members/{{user_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "members",
                "{{user_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Member",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"Member\",\n    \"occupation\": \"Software Engineer\",\n    \"emergency_contact_name\": \"Emergency Contact\",\n    \"emergency_contact_phone\": \"9876543210\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/members/{{user_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "members",
                "{{user_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Deactivate Member",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/members/{{user_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "members",
                "{{user_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Member Requests",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/member-requests/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "member-requests",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úÖ Approve Member Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"comments\": \"Approved by SUB_ADMIN\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/member-requests/{{member_request_id}}/approve_request/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "member-requests",
                "{{member_request_id}}",
                "approve_request",
                ""
              ]
            }
          }
        },
        {
          "name": "‚ùå Reject Member Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"comments\": \"Rejected by SUB_ADMIN\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/member-requests/{{member_request_id}}/reject_request/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "member-requests",
                "{{member_request_id}}",
                "reject_request",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üèóÔ∏è Building & Flat Management",
      "item": [
        {
          "name": "üèóÔ∏è Create Building",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('building_id', r.id);",
                  "    console.log('Building created:', r.name);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"name\": \"{{building_name}}\",\n    \"description\": \"Test building for vehicle registration\",\n    \"total_floors\": 10,\n    \"total_units\": 40\n}"
            },
            "url": {
              "raw": "{{base_url}}/buildings/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "buildings",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Buildings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/buildings/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "buildings",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Building Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/buildings/{{building_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "buildings",
                "{{building_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Building",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Building\",\n    \"description\": \"Updated description\",\n    \"total_floors\": 15,\n    \"total_units\": 50\n}"
            },
            "url": {
              "raw": "{{base_url}}/buildings/{{building_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "buildings",
                "{{building_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Building",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/buildings/{{building_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "buildings",
                "{{building_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üè† Create Flat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('flat_id', r.id);",
                  "    console.log('Flat created:', r.flat_number);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"block_number\": \"A\",\n    \"flat_number\": \"{{flat_number}}\",\n    \"type\": \"2BHK\",\n    \"area_sqft\": 1200,\n    \"owner\": {{admin_user_id}}\n}"
            },
            "url": {
              "raw": "{{base_url}}/flats/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "flats",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Flats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/flats/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "flats",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Flat Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/flats/{{flat_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "flats",
                "{{flat_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Flat",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"block_number\": \"B\",\n    \"flat_number\": \"201\",\n    \"type\": \"3BHK\",\n    \"area_sqft\": 1500\n}"
            },
            "url": {
              "raw": "{{base_url}}/flats/{{flat_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "flats",
                "{{flat_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Flat",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/flats/{{flat_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "flats",
                "{{flat_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üè† Create Enhanced Flat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('enhanced_flat_id', r.id);",
                  "    console.log('Enhanced flat created for visitor pass:', r.flat_number);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"building\": {{building_id}},\n    \"floor_number\": 1,\n    \"flat_number\": \"{{flat_number}}\",\n    \"flat_type\": \"2BHK\",\n    \"carpet_area\": 1200.0,\n    \"balcony_area\": 150.0,\n    \"parking_slots\": 1,\n    \"is_available\": true,\n    \"monthly_rent\": 25000.00\n}"
            },
            "url": {
              "raw": "{{base_url}}/enhanced-flats/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "enhanced-flats",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Enhanced Flats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/enhanced-flats/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "enhanced-flats",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Enhanced Flat Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/enhanced-flats/{{enhanced_flat_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "enhanced-flats",
                "{{enhanced_flat_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Enhanced Flat",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"floor_number\": 2,\n    \"flat_number\": \"201\",\n    \"flat_type\": \"3BHK\",\n    \"carpet_area\": 1500.0,\n    \"balcony_area\": 200.0,\n    \"parking_slots\": 2,\n    \"monthly_rent\": 30000.00\n}"
            },
            "url": {
              "raw": "{{base_url}}/enhanced-flats/{{enhanced_flat_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "enhanced-flats",
                "{{enhanced_flat_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Enhanced Flat",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/enhanced-flats/{{enhanced_flat_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "enhanced-flats",
                "{{enhanced_flat_id}}",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üöó Vehicle Management",
      "item": [
        {
          "name": "üöó Register Vehicle",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('vehicle_id', r.id);",
                  "    console.log('Vehicle registered:', r.vehicle_number);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"vehicle_number\": \"{{vehicle_number}}\",\n    \"type\": \"CAR\",\n    \"brand\": \"Honda\",\n    \"model\": \"City\",\n    \"color\": \"White\",\n    \"owner\": {{user_id}},\n    \"flat\": {{flat_id}}\n}"
            },
            "url": {
              "raw": "{{base_url}}/vehicles/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "vehicles",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Vehicles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/vehicles/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "vehicles",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Vehicle Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/vehicles/{{vehicle_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "vehicles",
                "{{vehicle_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Vehicle",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"color\": \"Black\",\n    \"model\": \"Civic\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/vehicles/{{vehicle_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "vehicles",
                "{{vehicle_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Vehicle",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/vehicles/{{vehicle_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "vehicles",
                "{{vehicle_id}}",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üèñÔ∏è Amenity Management",
      "item": [
        {
          "name": "üèä Create Amenity",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"name\": \"{{amenity_name}}\",\n    \"booking_rules\": \"Available 6 AM to 10 PM\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/amenities/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenities",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Amenities",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/amenities/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenities",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Amenity Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/amenities/{{amenity_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenities",
                "{{amenity_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Amenity",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Amenity\",\n    \"booking_rules\": \"Available 24 hours\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/amenities/{{amenity_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenities",
                "{{amenity_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Amenity",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/amenities/{{amenity_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenities",
                "{{amenity_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üìÖ Book Amenity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('booking_id', r.id);",
                  "    console.log('Amenity booked:', r.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amenity\": {{amenity_id}},\n    \"booked_by\": {{user_id}},\n    \"booking_date\": \"2025-01-15\",\n    \"start_time\": \"10:00:00\",\n    \"end_time\": \"12:00:00\",\n    \"purpose\": \"Family swimming\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/amenity-bookings/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenity-bookings",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Amenity Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/amenity-bookings/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenity-bookings",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Amenity Booking Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/amenity-bookings/{{booking_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenity-bookings",
                "{{booking_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Amenity Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"start_time\": \"11:00:00\",\n    \"end_time\": \"13:00:00\",\n    \"purpose\": \"Updated purpose\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/amenity-bookings/{{booking_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenity-bookings",
                "{{booking_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Cancel Amenity Booking",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/amenity-bookings/{{booking_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "amenity-bookings",
                "{{booking_id}}",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üì¢ Notice Management",
      "item": [
        {
          "name": "üì¢ Create Notice",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('notice_id', r.id);",
                  "    console.log('Notice created:', r.title);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"{{notice_title}}\",\n    \"content\": \"Monthly meeting next week\",\n    \"society\": {{society_id}}\n}"
            },
            "url": {
              "raw": "{{base_url}}/notices/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notices",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Notices",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/notices/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notices",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Notice Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/notices/{{notice_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notices",
                "{{notice_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Notice",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Notice Title\",\n    \"content\": \"Updated content for the notice\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/notices/{{notice_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notices",
                "{{notice_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Notice",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/notices/{{notice_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "notices",
                "{{notice_id}}",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üõí Marketplace",
      "item": [
        {
          "name": "üõí Create Marketplace Listing",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('marketplace_id', r.id);",
                  "    console.log('Marketplace listing created:', r.title);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"{{marketplace_item}}\",\n    \"description\": \"Good condition bicycle\",\n    \"price\": {{marketplace_price}},\n    \"category\": \"SPORTS\",\n    \"posted_by\": {{user_id}},\n    \"status\": \"ACTIVE\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/marketplace/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "marketplace",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Marketplace Listings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/marketplace/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "marketplace",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Marketplace Listing Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/marketplace/{{marketplace_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "marketplace",
                "{{marketplace_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Marketplace Listing",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Marketplace Item\",\n    \"description\": \"Updated description\",\n    \"price\": 4500.00\n}"
            },
            "url": {
              "raw": "{{base_url}}/marketplace/{{marketplace_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "marketplace",
                "{{marketplace_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Marketplace Listing",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/marketplace/{{marketplace_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "marketplace",
                "{{marketplace_id}}",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üì¢ Complaint Management",
      "item": [
        {
          "name": "üì¢ Submit Complaint",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('complaint_id', r.id);",
                  "    console.log('Complaint submitted:', r.title);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Water Leakage Issue\",\n    \"description\": \"Water leakage detected in flat bathroom ceiling\",\n    \"flat\": {{flat_id}},\n    \"raised_by\": {{user_id}},\n    \"priority\": \"HIGH\",\n    \"category\": \"MAINTENANCE\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/complaints/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "complaints",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Complaints",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/complaints/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "complaints",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Complaint Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/complaints/{{complaint_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "complaints",
                "{{complaint_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Complaint",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"IN_PROGRESS\",\n    \"notes\": \"Issue has been acknowledged by maintenance team\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/complaints/{{complaint_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "complaints",
                "{{complaint_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Complaint",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/complaints/{{complaint_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "complaints",
                "{{complaint_id}}",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üí∞ Billing System",
      "item": [
        {
          "name": "üìä Create Bill Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('bill_type_id', r.id);",
                  "    console.log('Bill type created:', r.name);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"name\": \"{{bill_type_name}}\",\n    \"description\": \"Regular maintenance charges\",\n    \"default_amount\": {{bill_amount}},\n    \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/bill-types/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "bill-types",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Bill Types",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/bill-types/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "bill-types",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Bill Type Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/bill-types/{{bill_type_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "bill-types",
                "{{bill_type_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Bill Type",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Bill Type\",\n    \"description\": \"Updated description\",\n    \"default_amount\": 6000.00\n}"
            },
            "url": {
              "raw": "{{base_url}}/bill-types/{{bill_type_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "bill-types",
                "{{bill_type_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Bill Type",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/bill-types/{{bill_type_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "bill-types",
                "{{bill_type_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Bills",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/enhanced-bills/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "enhanced-bills",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Maintenance Bills",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/maintenance-bills/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "maintenance-bills",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Common Expenses",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/common-expenses/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "common-expenses",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üõ°Ô∏è Security & Visitors",
      "item": [
        {
          "name": "üé´ Create Visitor Pass",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('visitor_pass_id', r.id);",
                  "    console.log('Visitor pass created:', r.pass_number);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"visitor_name\": \"{{visitor_name}}\",\n    \"visitor_phone\": \"{{visitor_phone}}\",\n    \"purpose_of_visit\": \"Personal visit\",\n    \"society\": {{society_id}},\n    \"flat_to_visit\": {{enhanced_flat_id}},\n    \"expected_entry_time\": \"2025-01-08T10:00:00Z\",\n    \"expected_exit_time\": \"2025-01-08T18:00:00Z\",\n    \"referenced_by\": \"Society Chairman\",\n    \"reference_phone\": \"{{subadmin_phone}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/visitor-passes/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "visitor-passes",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Visitor Passes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/visitor-passes/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "visitor-passes",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Visitor Pass Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/visitor-passes/{{visitor_pass_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "visitor-passes",
                "{{visitor_pass_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Visitor Pass Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"USED\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/visitor-passes/{{visitor_pass_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "visitor-passes",
                "{{visitor_pass_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üö™ Create Gate Log Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{staff_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"update_type\": \"VISITOR_ENTRY\",\n    \"person_name\": \"{{visitor_name}}\",\n    \"person_phone\": \"{{visitor_phone}}\",\n    \"flat_number\": \"{{flat_number}}\",\n    \"purpose\": \"Personal visit\",\n    \"visitor_pass\": {{visitor_pass_id}},\n    \"gate_number\": \"1\",\n    \"entry_method\": \"QR Scan\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/gate-logs/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "gate-logs",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Gate Logs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/gate-logs/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "gate-logs",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üõ†Ô∏è Helpdesk Management",
      "item": [
        {
          "name": "üîß Create Helpdesk Designation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('designation_id', r.id);",
                  "    console.log('Helpdesk designation created:', r.title);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"title\": \"{{helpdesk_designation}}\",\n    \"description\": \"Electrical maintenance\",\n    \"category\": \"Maintenance\",\n    \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/helpdesk-designations/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "helpdesk-designations",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Helpdesk Designations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/helpdesk-designations/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "helpdesk-designations",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Helpdesk Designation Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/helpdesk-designations/{{designation_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "helpdesk-designations",
                "{{designation_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Helpdesk Designation",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Designation\",\n    \"description\": \"Updated description\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/helpdesk-designations/{{designation_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "helpdesk-designations",
                "{{designation_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Helpdesk Designation",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/helpdesk-designations/{{designation_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "helpdesk-designations",
                "{{designation_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Helpdesk Contacts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/helpdesk-contacts/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "helpdesk-contacts",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Staff Management",
      "item": [
        {
          "name": "üëî Create Staff Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const r = pm.response.json();",
                  "    pm.environment.set('staff_category_id', r.id);",
                  "    console.log('Staff category created:', r.name);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"society\": {{society_id}},\n    \"name\": \"{{staff_category_name}}\",\n    \"description\": \"Security staff\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/staff-categories/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "staff-categories",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Staff Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/staff-categories/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "staff-categories",
                ""
              ]
            }
          }
        },
        {
          "name": "üîç Get Staff Category Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/staff-categories/{{staff_category_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "staff-categories",
                "{{staff_category_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "‚úèÔ∏è Update Staff Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Category\",\n    \"description\": \"Updated description\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/staff-categories/{{staff_category_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "staff-categories",
                "{{staff_category_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üóëÔ∏è Delete Staff Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/staff-categories/{{staff_category_id}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "staff-categories",
                "{{staff_category_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "üë• Create STAFF User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{subadmin_access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"phone_number\": \"{{staff_phone}}\",\n    \"email\": \"{{staff_email}}\",\n    \"first_name\": \"Security\",\n    \"last_name\": \"Guard\",\n    \"password\": \"{{staff_password}}\",\n    \"password_confirm\": \"{{staff_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/create-staff-user/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "admin",
                "create-staff-user",
                ""
              ]
            }
          }
        },
        {
          "name": "üìã List Staff Members",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/staff-members/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "staff-members",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Dashboard & Analytics",
      "item": [
        {
          "name": "üìä Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/dashboard/stats/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "dashboard",
                "stats",
                ""
              ]
            }
          }
        },
        {
          "name": "üë• List Directory",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/directory/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "directory",
                ""
              ]
            }
          }
        }
      ]
    }
  ]
}